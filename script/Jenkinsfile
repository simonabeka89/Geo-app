pipeline {
    agent any 
    tools {
        maven 'M2_HOME'
    }
    stages {
        stage('SonarQubeScanner') {
            steps {
                withSonarQubeEnv('SonarQubeScanner') {
                    sh "mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=simonabeka89_Geo-app"
                }
            }
        }
        stage('Maven Build and Test') {
            steps {
                sh "mvn clean validate compile install test package"
            }
        }
        stage('Upload Artifact to Artifactory') {
            steps {
                sh '''
                    artifact=$(find . -name "bio*.jar")
                    curl -uadmin:AP8gcgmmset5jeYChTJYDN6XmDd -T $artifact "http://ec2-54-236-43-92.compute-1.amazonaws.com:8081/artifactory/geolocation/geo/bio_${BUILD_ID}.jar"
                '''
            }
        }
        stage('docker login') {
            steps {
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 851725277659.dkr.ecr.us-east-1.amazonaws.com'
            }
        }
        stage('docker image build') {
            steps {
                sh 'docker build -t logist:v.${BUILD_ID} .'
                sh 'docker build -t logist:latest .'
            }
        }
        stage('Image tagging') {
            steps {
                sh 'docker build -t geosolutions .'
                sh 'docker tag geosolutions:latest 851725277659.dkr.ecr.us-east-1.amazonaws.com/geosolutions:latest'
                sh 'docker tag logist:v.${BUILD_ID} 851725277659.dkr.ecr.us-east-1.amazonaws.com/geosolutions:v.${BUILD_ID}'
            }
        }
        stage('image push') {
            steps {
                sh 'docker push 851725277659.dkr.ecr.us-east-1.amazonaws.com/geosolutions:latest'
                sh 'docker push 851725277659.dkr.ecr.us-east-1.amazonaws.com/geosolutions:v.${BUILD_ID}'
            }
        }
    }
}
